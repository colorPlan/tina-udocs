//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  authors: Authors;
  authorsConnection: AuthorsConnection;
  redirects: Redirects;
  redirectsConnection: RedirectsConnection;
  code_versions: Code_Versions;
  code_versionsConnection: Code_VersionsConnection;
  permalinks: Permalinks;
  permalinksConnection: PermalinksConnection;
  table_of_contents: Table_Of_Contents;
  table_of_contentsConnection: Table_Of_ContentsConnection;
  site_settings: Site_Settings;
  site_settingsConnection: Site_SettingsConnection;
  doc_pages: Doc_Pages;
  doc_pagesConnection: Doc_PagesConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAuthorsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAuthorsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AuthorsFilter>;
};


export type QueryRedirectsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryRedirectsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<RedirectsFilter>;
};


export type QueryCode_VersionsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryCode_VersionsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Code_VersionsFilter>;
};


export type QueryPermalinksArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPermalinksConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PermalinksFilter>;
};


export type QueryTable_Of_ContentsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryTable_Of_ContentsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Table_Of_ContentsFilter>;
};


export type QuerySite_SettingsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QuerySite_SettingsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Site_SettingsFilter>;
};


export type QueryDoc_PagesArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryDoc_PagesConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Doc_PagesFilter>;
};

export type DocumentFilter = {
  authors?: InputMaybe<AuthorsFilter>;
  redirects?: InputMaybe<RedirectsFilter>;
  code_versions?: InputMaybe<Code_VersionsFilter>;
  permalinks?: InputMaybe<PermalinksFilter>;
  table_of_contents?: InputMaybe<Table_Of_ContentsFilter>;
  site_settings?: InputMaybe<Site_SettingsFilter>;
  doc_pages?: InputMaybe<Doc_PagesFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Authors | Redirects | Code_Versions | Permalinks | Table_Of_Contents | Site_Settings | Doc_Pages;

export type Authors = Node & Document & {
  __typename?: 'Authors';
  full_name: Scalars['String'];
  github?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type AuthorsFilter = {
  full_name?: InputMaybe<StringFilter>;
  github?: InputMaybe<StringFilter>;
};

export type AuthorsConnectionEdges = {
  __typename?: 'AuthorsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Authors>;
};

export type AuthorsConnection = Connection & {
  __typename?: 'AuthorsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AuthorsConnectionEdges>>>;
};

export type RedirectsSource = Permalinks;

export type RedirectsDestination = Permalinks;

export type Redirects = Node & Document & {
  __typename?: 'Redirects';
  source: RedirectsSource;
  destination: RedirectsDestination;
  permanent: Scalars['Boolean'];
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type RedirectsSourceFilter = {
  permalinks?: InputMaybe<PermalinksFilter>;
};

export type RedirectsDestinationFilter = {
  permalinks?: InputMaybe<PermalinksFilter>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type RedirectsFilter = {
  source?: InputMaybe<RedirectsSourceFilter>;
  destination?: InputMaybe<RedirectsDestinationFilter>;
  permanent?: InputMaybe<BooleanFilter>;
};

export type RedirectsConnectionEdges = {
  __typename?: 'RedirectsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Redirects>;
};

export type RedirectsConnection = Connection & {
  __typename?: 'RedirectsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<RedirectsConnectionEdges>>>;
};

export type Code_Versions = Node & Document & {
  __typename?: 'Code_versions';
  version_number: Scalars['String'];
  release_date: Scalars['String'];
  published: Scalars['Boolean'];
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type DatetimeFilter = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Code_VersionsFilter = {
  version_number?: InputMaybe<StringFilter>;
  release_date?: InputMaybe<DatetimeFilter>;
  published?: InputMaybe<BooleanFilter>;
};

export type Code_VersionsConnectionEdges = {
  __typename?: 'Code_versionsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Code_Versions>;
};

export type Code_VersionsConnection = Connection & {
  __typename?: 'Code_versionsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<Code_VersionsConnectionEdges>>>;
};

export type PermalinksPagesPage = Doc_Pages;

export type PermalinksPages = {
  __typename?: 'PermalinksPages';
  page: PermalinksPagesPage;
  language: Scalars['String'];
};

export type Permalinks = Node & Document & {
  __typename?: 'Permalinks';
  canonical_url: Scalars['String'];
  pages?: Maybe<Array<Maybe<PermalinksPages>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PermalinksPagesPageFilter = {
  doc_pages?: InputMaybe<Doc_PagesFilter>;
};

export type PermalinksPagesFilter = {
  page?: InputMaybe<PermalinksPagesPageFilter>;
  language?: InputMaybe<StringFilter>;
};

export type PermalinksFilter = {
  canonical_url?: InputMaybe<StringFilter>;
  pages?: InputMaybe<PermalinksPagesFilter>;
};

export type PermalinksConnectionEdges = {
  __typename?: 'PermalinksConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Permalinks>;
};

export type PermalinksConnection = Connection & {
  __typename?: 'PermalinksConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PermalinksConnectionEdges>>>;
};

export type Table_Of_ContentsCode_Version = Code_Versions;

export type Table_Of_ContentsSectionsPermalink = Permalinks;

export type Table_Of_ContentsSectionsSub_SectionsPermalink = Permalinks;

export type Table_Of_ContentsSectionsSub_SectionsSub_SectionsPermalink = Permalinks;

export type Table_Of_ContentsSectionsSub_SectionsSub_Sections = {
  __typename?: 'Table_of_contentsSectionsSub_sectionsSub_sections';
  Label: Scalars['String'];
  permalink: Table_Of_ContentsSectionsSub_SectionsSub_SectionsPermalink;
};

export type Table_Of_ContentsSectionsSub_Sections = {
  __typename?: 'Table_of_contentsSectionsSub_sections';
  Label: Scalars['String'];
  permalink: Table_Of_ContentsSectionsSub_SectionsPermalink;
  sub_sections?: Maybe<Array<Maybe<Table_Of_ContentsSectionsSub_SectionsSub_Sections>>>;
};

export type Table_Of_ContentsSections = {
  __typename?: 'Table_of_contentsSections';
  Label: Scalars['String'];
  permalink: Table_Of_ContentsSectionsPermalink;
  sub_sections?: Maybe<Array<Maybe<Table_Of_ContentsSectionsSub_Sections>>>;
};

export type Table_Of_Contents = Node & Document & {
  __typename?: 'Table_of_contents';
  language: Scalars['String'];
  code_version?: Maybe<Table_Of_ContentsCode_Version>;
  sections?: Maybe<Array<Maybe<Table_Of_ContentsSections>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type Table_Of_ContentsCode_VersionFilter = {
  code_versions?: InputMaybe<Code_VersionsFilter>;
};

export type Table_Of_ContentsSectionsPermalinkFilter = {
  permalinks?: InputMaybe<PermalinksFilter>;
};

export type Table_Of_ContentsSectionsSub_SectionsPermalinkFilter = {
  permalinks?: InputMaybe<PermalinksFilter>;
};

export type Table_Of_ContentsSectionsSub_SectionsSub_SectionsPermalinkFilter = {
  permalinks?: InputMaybe<PermalinksFilter>;
};

export type Table_Of_ContentsSectionsSub_SectionsSub_SectionsFilter = {
  Label?: InputMaybe<StringFilter>;
  permalink?: InputMaybe<Table_Of_ContentsSectionsSub_SectionsSub_SectionsPermalinkFilter>;
};

export type Table_Of_ContentsSectionsSub_SectionsFilter = {
  Label?: InputMaybe<StringFilter>;
  permalink?: InputMaybe<Table_Of_ContentsSectionsSub_SectionsPermalinkFilter>;
  sub_sections?: InputMaybe<Table_Of_ContentsSectionsSub_SectionsSub_SectionsFilter>;
};

export type Table_Of_ContentsSectionsFilter = {
  Label?: InputMaybe<StringFilter>;
  permalink?: InputMaybe<Table_Of_ContentsSectionsPermalinkFilter>;
  sub_sections?: InputMaybe<Table_Of_ContentsSectionsSub_SectionsFilter>;
};

export type Table_Of_ContentsFilter = {
  language?: InputMaybe<StringFilter>;
  code_version?: InputMaybe<Table_Of_ContentsCode_VersionFilter>;
  sections?: InputMaybe<Table_Of_ContentsSectionsFilter>;
};

export type Table_Of_ContentsConnectionEdges = {
  __typename?: 'Table_of_contentsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Table_Of_Contents>;
};

export type Table_Of_ContentsConnection = Connection & {
  __typename?: 'Table_of_contentsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<Table_Of_ContentsConnectionEdges>>>;
};

export type Site_SettingsMeta_Links = {
  __typename?: 'Site_settingsMeta_links';
  link: Scalars['String'];
  label: Scalars['String'];
};

export type Site_Settings = Node & Document & {
  __typename?: 'Site_settings';
  language: Scalars['String'];
  sku_product_name: Scalars['String'];
  site_title: Scalars['String'];
  project_code_repository: Scalars['String'];
  meta_links?: Maybe<Array<Maybe<Site_SettingsMeta_Links>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type Site_SettingsMeta_LinksFilter = {
  link?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type Site_SettingsFilter = {
  language?: InputMaybe<StringFilter>;
  sku_product_name?: InputMaybe<StringFilter>;
  site_title?: InputMaybe<StringFilter>;
  project_code_repository?: InputMaybe<StringFilter>;
  meta_links?: InputMaybe<Site_SettingsMeta_LinksFilter>;
};

export type Site_SettingsConnectionEdges = {
  __typename?: 'Site_settingsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Site_Settings>;
};

export type Site_SettingsConnection = Connection & {
  __typename?: 'Site_settingsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<Site_SettingsConnectionEdges>>>;
};

export type Doc_PagesAuthor = Authors;

export type Doc_PagesCode_Version = Code_Versions;

export type Doc_Pages = Node & Document & {
  __typename?: 'Doc_pages';
  title: Scalars['String'];
  description?: Maybe<Scalars['String']>;
  author?: Maybe<Doc_PagesAuthor>;
  type: Scalars['String'];
  code_version?: Maybe<Doc_PagesCode_Version>;
  draft: Scalars['Boolean'];
  body: Scalars['JSON'];
  last_updated: Scalars['String'];
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type Doc_PagesAuthorFilter = {
  authors?: InputMaybe<AuthorsFilter>;
};

export type Doc_PagesCode_VersionFilter = {
  code_versions?: InputMaybe<Code_VersionsFilter>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type Doc_PagesFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  author?: InputMaybe<Doc_PagesAuthorFilter>;
  type?: InputMaybe<StringFilter>;
  code_version?: InputMaybe<Doc_PagesCode_VersionFilter>;
  draft?: InputMaybe<BooleanFilter>;
  body?: InputMaybe<RichTextFilter>;
  last_updated?: InputMaybe<DatetimeFilter>;
};

export type Doc_PagesConnectionEdges = {
  __typename?: 'Doc_pagesConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Doc_Pages>;
};

export type Doc_PagesConnection = Connection & {
  __typename?: 'Doc_pagesConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<Doc_PagesConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updateAuthors: Authors;
  createAuthors: Authors;
  updateRedirects: Redirects;
  createRedirects: Redirects;
  updateCode_versions: Code_Versions;
  createCode_versions: Code_Versions;
  updatePermalinks: Permalinks;
  createPermalinks: Permalinks;
  updateTable_of_contents: Table_Of_Contents;
  createTable_of_contents: Table_Of_Contents;
  updateSite_settings: Site_Settings;
  createSite_settings: Site_Settings;
  updateDoc_pages: Doc_Pages;
  createDoc_pages: Doc_Pages;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateAuthorsArgs = {
  relativePath: Scalars['String'];
  params: AuthorsMutation;
};


export type MutationCreateAuthorsArgs = {
  relativePath: Scalars['String'];
  params: AuthorsMutation;
};


export type MutationUpdateRedirectsArgs = {
  relativePath: Scalars['String'];
  params: RedirectsMutation;
};


export type MutationCreateRedirectsArgs = {
  relativePath: Scalars['String'];
  params: RedirectsMutation;
};


export type MutationUpdateCode_VersionsArgs = {
  relativePath: Scalars['String'];
  params: Code_VersionsMutation;
};


export type MutationCreateCode_VersionsArgs = {
  relativePath: Scalars['String'];
  params: Code_VersionsMutation;
};


export type MutationUpdatePermalinksArgs = {
  relativePath: Scalars['String'];
  params: PermalinksMutation;
};


export type MutationCreatePermalinksArgs = {
  relativePath: Scalars['String'];
  params: PermalinksMutation;
};


export type MutationUpdateTable_Of_ContentsArgs = {
  relativePath: Scalars['String'];
  params: Table_Of_ContentsMutation;
};


export type MutationCreateTable_Of_ContentsArgs = {
  relativePath: Scalars['String'];
  params: Table_Of_ContentsMutation;
};


export type MutationUpdateSite_SettingsArgs = {
  relativePath: Scalars['String'];
  params: Site_SettingsMutation;
};


export type MutationCreateSite_SettingsArgs = {
  relativePath: Scalars['String'];
  params: Site_SettingsMutation;
};


export type MutationUpdateDoc_PagesArgs = {
  relativePath: Scalars['String'];
  params: Doc_PagesMutation;
};


export type MutationCreateDoc_PagesArgs = {
  relativePath: Scalars['String'];
  params: Doc_PagesMutation;
};

export type DocumentUpdateMutation = {
  authors?: InputMaybe<AuthorsMutation>;
  redirects?: InputMaybe<RedirectsMutation>;
  code_versions?: InputMaybe<Code_VersionsMutation>;
  permalinks?: InputMaybe<PermalinksMutation>;
  table_of_contents?: InputMaybe<Table_Of_ContentsMutation>;
  site_settings?: InputMaybe<Site_SettingsMutation>;
  doc_pages?: InputMaybe<Doc_PagesMutation>;
  relativePath?: InputMaybe<Scalars['String']>;
};

export type DocumentMutation = {
  authors?: InputMaybe<AuthorsMutation>;
  redirects?: InputMaybe<RedirectsMutation>;
  code_versions?: InputMaybe<Code_VersionsMutation>;
  permalinks?: InputMaybe<PermalinksMutation>;
  table_of_contents?: InputMaybe<Table_Of_ContentsMutation>;
  site_settings?: InputMaybe<Site_SettingsMutation>;
  doc_pages?: InputMaybe<Doc_PagesMutation>;
};

export type AuthorsMutation = {
  full_name?: InputMaybe<Scalars['String']>;
  github?: InputMaybe<Scalars['String']>;
};

export type RedirectsMutation = {
  source?: InputMaybe<Scalars['String']>;
  destination?: InputMaybe<Scalars['String']>;
  permanent?: InputMaybe<Scalars['Boolean']>;
};

export type Code_VersionsMutation = {
  version_number?: InputMaybe<Scalars['String']>;
  release_date?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['Boolean']>;
};

export type PermalinksPagesMutation = {
  page?: InputMaybe<Scalars['String']>;
  language?: InputMaybe<Scalars['String']>;
};

export type PermalinksMutation = {
  canonical_url?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<Array<InputMaybe<PermalinksPagesMutation>>>;
};

export type Table_Of_ContentsSectionsSub_SectionsSub_SectionsMutation = {
  Label?: InputMaybe<Scalars['String']>;
  permalink?: InputMaybe<Scalars['String']>;
};

export type Table_Of_ContentsSectionsSub_SectionsMutation = {
  Label?: InputMaybe<Scalars['String']>;
  permalink?: InputMaybe<Scalars['String']>;
  sub_sections?: InputMaybe<Array<InputMaybe<Table_Of_ContentsSectionsSub_SectionsSub_SectionsMutation>>>;
};

export type Table_Of_ContentsSectionsMutation = {
  Label?: InputMaybe<Scalars['String']>;
  permalink?: InputMaybe<Scalars['String']>;
  sub_sections?: InputMaybe<Array<InputMaybe<Table_Of_ContentsSectionsSub_SectionsMutation>>>;
};

export type Table_Of_ContentsMutation = {
  language?: InputMaybe<Scalars['String']>;
  code_version?: InputMaybe<Scalars['String']>;
  sections?: InputMaybe<Array<InputMaybe<Table_Of_ContentsSectionsMutation>>>;
};

export type Site_SettingsMeta_LinksMutation = {
  link?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type Site_SettingsMutation = {
  language?: InputMaybe<Scalars['String']>;
  sku_product_name?: InputMaybe<Scalars['String']>;
  site_title?: InputMaybe<Scalars['String']>;
  project_code_repository?: InputMaybe<Scalars['String']>;
  meta_links?: InputMaybe<Array<InputMaybe<Site_SettingsMeta_LinksMutation>>>;
};

export type Doc_PagesMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  code_version?: InputMaybe<Scalars['String']>;
  draft?: InputMaybe<Scalars['Boolean']>;
  body?: InputMaybe<Scalars['JSON']>;
  last_updated?: InputMaybe<Scalars['String']>;
};

export type AuthorsPartsFragment = { __typename?: 'Authors', full_name: string, github?: string | null };

export type RedirectsPartsFragment = { __typename?: 'Redirects', permanent: boolean, source: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, destination: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null } };

export type Code_VersionsPartsFragment = { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean };

export type PermalinksPartsFragment = { __typename?: 'Permalinks', canonical_url: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string, author?: { __typename?: 'Authors', full_name: string, github?: string | null, id: string } | null, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null } } | null> | null };

export type Table_Of_ContentsPartsFragment = { __typename?: 'Table_of_contents', language: string, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null, sections?: Array<{ __typename: 'Table_of_contentsSections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, sub_sections?: Array<{ __typename: 'Table_of_contentsSectionsSub_sections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, sub_sections?: Array<{ __typename: 'Table_of_contentsSectionsSub_sectionsSub_sections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null } } | null> | null } | null> | null } | null> | null };

export type Site_SettingsPartsFragment = { __typename?: 'Site_settings', language: string, sku_product_name: string, site_title: string, project_code_repository: string, meta_links?: Array<{ __typename: 'Site_settingsMeta_links', link: string, label: string } | null> | null };

export type Doc_PagesPartsFragment = { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, author?: { __typename?: 'Authors', full_name: string, github?: string | null, id: string } | null, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null };

export type AuthorsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type AuthorsQuery = { __typename?: 'Query', authors: { __typename?: 'Authors', id: string, full_name: string, github?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type AuthorsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<AuthorsFilter>;
}>;


export type AuthorsConnectionQuery = { __typename?: 'Query', authorsConnection: { __typename?: 'AuthorsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'AuthorsConnectionEdges', cursor: string, node?: { __typename?: 'Authors', id: string, full_name: string, github?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type RedirectsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type RedirectsQuery = { __typename?: 'Query', redirects: { __typename?: 'Redirects', id: string, permanent: boolean, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, source: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, destination: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null } } };

export type RedirectsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<RedirectsFilter>;
}>;


export type RedirectsConnectionQuery = { __typename?: 'Query', redirectsConnection: { __typename?: 'RedirectsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'RedirectsConnectionEdges', cursor: string, node?: { __typename?: 'Redirects', id: string, permanent: boolean, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, source: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, destination: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null } } | null } | null> | null } };

export type Code_VersionsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type Code_VersionsQuery = { __typename?: 'Query', code_versions: { __typename?: 'Code_versions', id: string, version_number: string, release_date: string, published: boolean, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type Code_VersionsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Code_VersionsFilter>;
}>;


export type Code_VersionsConnectionQuery = { __typename?: 'Query', code_versionsConnection: { __typename?: 'Code_versionsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'Code_versionsConnectionEdges', cursor: string, node?: { __typename?: 'Code_versions', id: string, version_number: string, release_date: string, published: boolean, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type PermalinksQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PermalinksQuery = { __typename?: 'Query', permalinks: { __typename?: 'Permalinks', id: string, canonical_url: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string, author?: { __typename?: 'Authors', full_name: string, github?: string | null, id: string } | null, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null } } | null> | null } };

export type PermalinksConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PermalinksFilter>;
}>;


export type PermalinksConnectionQuery = { __typename?: 'Query', permalinksConnection: { __typename?: 'PermalinksConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PermalinksConnectionEdges', cursor: string, node?: { __typename?: 'Permalinks', id: string, canonical_url: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string, author?: { __typename?: 'Authors', full_name: string, github?: string | null, id: string } | null, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null } } | null> | null } | null } | null> | null } };

export type Table_Of_ContentsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type Table_Of_ContentsQuery = { __typename?: 'Query', table_of_contents: { __typename?: 'Table_of_contents', id: string, language: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null, sections?: Array<{ __typename: 'Table_of_contentsSections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, sub_sections?: Array<{ __typename: 'Table_of_contentsSectionsSub_sections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, sub_sections?: Array<{ __typename: 'Table_of_contentsSectionsSub_sectionsSub_sections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null } } | null> | null } | null> | null } | null> | null } };

export type Table_Of_ContentsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Table_Of_ContentsFilter>;
}>;


export type Table_Of_ContentsConnectionQuery = { __typename?: 'Query', table_of_contentsConnection: { __typename?: 'Table_of_contentsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'Table_of_contentsConnectionEdges', cursor: string, node?: { __typename?: 'Table_of_contents', id: string, language: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null, sections?: Array<{ __typename: 'Table_of_contentsSections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, sub_sections?: Array<{ __typename: 'Table_of_contentsSectionsSub_sections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null }, sub_sections?: Array<{ __typename: 'Table_of_contentsSectionsSub_sectionsSub_sections', Label: string, permalink: { __typename?: 'Permalinks', canonical_url: string, id: string, pages?: Array<{ __typename: 'PermalinksPages', language: string, page: { __typename?: 'Doc_pages', title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, id: string } } | null> | null } } | null> | null } | null> | null } | null> | null } | null } | null> | null } };

export type Site_SettingsQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type Site_SettingsQuery = { __typename?: 'Query', site_settings: { __typename?: 'Site_settings', id: string, language: string, sku_product_name: string, site_title: string, project_code_repository: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, meta_links?: Array<{ __typename: 'Site_settingsMeta_links', link: string, label: string } | null> | null } };

export type Site_SettingsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Site_SettingsFilter>;
}>;


export type Site_SettingsConnectionQuery = { __typename?: 'Query', site_settingsConnection: { __typename?: 'Site_settingsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'Site_settingsConnectionEdges', cursor: string, node?: { __typename?: 'Site_settings', id: string, language: string, sku_product_name: string, site_title: string, project_code_repository: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, meta_links?: Array<{ __typename: 'Site_settingsMeta_links', link: string, label: string } | null> | null } | null } | null> | null } };

export type Doc_PagesQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type Doc_PagesQuery = { __typename?: 'Query', doc_pages: { __typename?: 'Doc_pages', id: string, title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Authors', full_name: string, github?: string | null, id: string } | null, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null } };

export type Doc_PagesConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<Doc_PagesFilter>;
}>;


export type Doc_PagesConnectionQuery = { __typename?: 'Query', doc_pagesConnection: { __typename?: 'Doc_pagesConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'Doc_pagesConnectionEdges', cursor: string, node?: { __typename?: 'Doc_pages', id: string, title: string, description?: string | null, type: string, draft: boolean, body: any, last_updated: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Authors', full_name: string, github?: string | null, id: string } | null, code_version?: { __typename?: 'Code_versions', version_number: string, release_date: string, published: boolean, id: string } | null } | null } | null> | null } };

export const AuthorsPartsFragmentDoc = gql`
    fragment AuthorsParts on Authors {
  full_name
  github
}
    `;
export const RedirectsPartsFragmentDoc = gql`
    fragment RedirectsParts on Redirects {
  source {
    ... on Permalinks {
      canonical_url
      pages {
        __typename
        page {
          ... on Doc_pages {
            title
            description
            type
            draft
            body
            last_updated
          }
          ... on Document {
            id
          }
        }
        language
      }
    }
    ... on Document {
      id
    }
  }
  destination {
    ... on Permalinks {
      canonical_url
      pages {
        __typename
        page {
          ... on Doc_pages {
            title
            description
            type
            draft
            body
            last_updated
          }
          ... on Document {
            id
          }
        }
        language
      }
    }
    ... on Document {
      id
    }
  }
  permanent
}
    `;
export const Code_VersionsPartsFragmentDoc = gql`
    fragment Code_versionsParts on Code_versions {
  version_number
  release_date
  published
}
    `;
export const PermalinksPartsFragmentDoc = gql`
    fragment PermalinksParts on Permalinks {
  canonical_url
  pages {
    __typename
    page {
      ... on Doc_pages {
        title
        description
        author {
          ... on Authors {
            full_name
            github
          }
          ... on Document {
            id
          }
        }
        type
        code_version {
          ... on Code_versions {
            version_number
            release_date
            published
          }
          ... on Document {
            id
          }
        }
        draft
        body
        last_updated
      }
      ... on Document {
        id
      }
    }
    language
  }
}
    `;
export const Table_Of_ContentsPartsFragmentDoc = gql`
    fragment Table_of_contentsParts on Table_of_contents {
  language
  code_version {
    ... on Code_versions {
      version_number
      release_date
      published
    }
    ... on Document {
      id
    }
  }
  sections {
    __typename
    Label
    permalink {
      ... on Permalinks {
        canonical_url
        pages {
          __typename
          page {
            ... on Doc_pages {
              title
              description
              type
              draft
              body
              last_updated
            }
            ... on Document {
              id
            }
          }
          language
        }
      }
      ... on Document {
        id
      }
    }
    sub_sections {
      __typename
      Label
      permalink {
        ... on Permalinks {
          canonical_url
          pages {
            __typename
            page {
              ... on Doc_pages {
                title
                description
                type
                draft
                body
                last_updated
              }
              ... on Document {
                id
              }
            }
            language
          }
        }
        ... on Document {
          id
        }
      }
      sub_sections {
        __typename
        Label
        permalink {
          ... on Permalinks {
            canonical_url
            pages {
              __typename
              page {
                ... on Doc_pages {
                  title
                  description
                  type
                  draft
                  body
                  last_updated
                }
                ... on Document {
                  id
                }
              }
              language
            }
          }
          ... on Document {
            id
          }
        }
      }
    }
  }
}
    `;
export const Site_SettingsPartsFragmentDoc = gql`
    fragment Site_settingsParts on Site_settings {
  language
  sku_product_name
  site_title
  project_code_repository
  meta_links {
    __typename
    link
    label
  }
}
    `;
export const Doc_PagesPartsFragmentDoc = gql`
    fragment Doc_pagesParts on Doc_pages {
  title
  description
  author {
    ... on Authors {
      full_name
      github
    }
    ... on Document {
      id
    }
  }
  type
  code_version {
    ... on Code_versions {
      version_number
      release_date
      published
    }
    ... on Document {
      id
    }
  }
  draft
  body
  last_updated
}
    `;
export const AuthorsDocument = gql`
    query authors($relativePath: String!) {
  authors(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AuthorsParts
  }
}
    ${AuthorsPartsFragmentDoc}`;
export const AuthorsConnectionDocument = gql`
    query authorsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: AuthorsFilter) {
  authorsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AuthorsParts
      }
    }
  }
}
    ${AuthorsPartsFragmentDoc}`;
export const RedirectsDocument = gql`
    query redirects($relativePath: String!) {
  redirects(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...RedirectsParts
  }
}
    ${RedirectsPartsFragmentDoc}`;
export const RedirectsConnectionDocument = gql`
    query redirectsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: RedirectsFilter) {
  redirectsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...RedirectsParts
      }
    }
  }
}
    ${RedirectsPartsFragmentDoc}`;
export const Code_VersionsDocument = gql`
    query code_versions($relativePath: String!) {
  code_versions(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...Code_versionsParts
  }
}
    ${Code_VersionsPartsFragmentDoc}`;
export const Code_VersionsConnectionDocument = gql`
    query code_versionsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: Code_versionsFilter) {
  code_versionsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...Code_versionsParts
      }
    }
  }
}
    ${Code_VersionsPartsFragmentDoc}`;
export const PermalinksDocument = gql`
    query permalinks($relativePath: String!) {
  permalinks(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PermalinksParts
  }
}
    ${PermalinksPartsFragmentDoc}`;
export const PermalinksConnectionDocument = gql`
    query permalinksConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PermalinksFilter) {
  permalinksConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PermalinksParts
      }
    }
  }
}
    ${PermalinksPartsFragmentDoc}`;
export const Table_Of_ContentsDocument = gql`
    query table_of_contents($relativePath: String!) {
  table_of_contents(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...Table_of_contentsParts
  }
}
    ${Table_Of_ContentsPartsFragmentDoc}`;
export const Table_Of_ContentsConnectionDocument = gql`
    query table_of_contentsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: Table_of_contentsFilter) {
  table_of_contentsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...Table_of_contentsParts
      }
    }
  }
}
    ${Table_Of_ContentsPartsFragmentDoc}`;
export const Site_SettingsDocument = gql`
    query site_settings($relativePath: String!) {
  site_settings(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...Site_settingsParts
  }
}
    ${Site_SettingsPartsFragmentDoc}`;
export const Site_SettingsConnectionDocument = gql`
    query site_settingsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: Site_settingsFilter) {
  site_settingsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...Site_settingsParts
      }
    }
  }
}
    ${Site_SettingsPartsFragmentDoc}`;
export const Doc_PagesDocument = gql`
    query doc_pages($relativePath: String!) {
  doc_pages(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...Doc_pagesParts
  }
}
    ${Doc_PagesPartsFragmentDoc}`;
export const Doc_PagesConnectionDocument = gql`
    query doc_pagesConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: Doc_pagesFilter) {
  doc_pagesConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...Doc_pagesParts
      }
    }
  }
}
    ${Doc_PagesPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      authors(variables: AuthorsQueryVariables, options?: C): Promise<{data: AuthorsQuery, variables: AuthorsQueryVariables, query: string}> {
        return requester<{data: AuthorsQuery, variables: AuthorsQueryVariables, query: string}, AuthorsQueryVariables>(AuthorsDocument, variables, options);
      },
    authorsConnection(variables?: AuthorsConnectionQueryVariables, options?: C): Promise<{data: AuthorsConnectionQuery, variables: AuthorsConnectionQueryVariables, query: string}> {
        return requester<{data: AuthorsConnectionQuery, variables: AuthorsConnectionQueryVariables, query: string}, AuthorsConnectionQueryVariables>(AuthorsConnectionDocument, variables, options);
      },
    redirects(variables: RedirectsQueryVariables, options?: C): Promise<{data: RedirectsQuery, variables: RedirectsQueryVariables, query: string}> {
        return requester<{data: RedirectsQuery, variables: RedirectsQueryVariables, query: string}, RedirectsQueryVariables>(RedirectsDocument, variables, options);
      },
    redirectsConnection(variables?: RedirectsConnectionQueryVariables, options?: C): Promise<{data: RedirectsConnectionQuery, variables: RedirectsConnectionQueryVariables, query: string}> {
        return requester<{data: RedirectsConnectionQuery, variables: RedirectsConnectionQueryVariables, query: string}, RedirectsConnectionQueryVariables>(RedirectsConnectionDocument, variables, options);
      },
    code_versions(variables: Code_VersionsQueryVariables, options?: C): Promise<{data: Code_VersionsQuery, variables: Code_VersionsQueryVariables, query: string}> {
        return requester<{data: Code_VersionsQuery, variables: Code_VersionsQueryVariables, query: string}, Code_VersionsQueryVariables>(Code_VersionsDocument, variables, options);
      },
    code_versionsConnection(variables?: Code_VersionsConnectionQueryVariables, options?: C): Promise<{data: Code_VersionsConnectionQuery, variables: Code_VersionsConnectionQueryVariables, query: string}> {
        return requester<{data: Code_VersionsConnectionQuery, variables: Code_VersionsConnectionQueryVariables, query: string}, Code_VersionsConnectionQueryVariables>(Code_VersionsConnectionDocument, variables, options);
      },
    permalinks(variables: PermalinksQueryVariables, options?: C): Promise<{data: PermalinksQuery, variables: PermalinksQueryVariables, query: string}> {
        return requester<{data: PermalinksQuery, variables: PermalinksQueryVariables, query: string}, PermalinksQueryVariables>(PermalinksDocument, variables, options);
      },
    permalinksConnection(variables?: PermalinksConnectionQueryVariables, options?: C): Promise<{data: PermalinksConnectionQuery, variables: PermalinksConnectionQueryVariables, query: string}> {
        return requester<{data: PermalinksConnectionQuery, variables: PermalinksConnectionQueryVariables, query: string}, PermalinksConnectionQueryVariables>(PermalinksConnectionDocument, variables, options);
      },
    table_of_contents(variables: Table_Of_ContentsQueryVariables, options?: C): Promise<{data: Table_Of_ContentsQuery, variables: Table_Of_ContentsQueryVariables, query: string}> {
        return requester<{data: Table_Of_ContentsQuery, variables: Table_Of_ContentsQueryVariables, query: string}, Table_Of_ContentsQueryVariables>(Table_Of_ContentsDocument, variables, options);
      },
    table_of_contentsConnection(variables?: Table_Of_ContentsConnectionQueryVariables, options?: C): Promise<{data: Table_Of_ContentsConnectionQuery, variables: Table_Of_ContentsConnectionQueryVariables, query: string}> {
        return requester<{data: Table_Of_ContentsConnectionQuery, variables: Table_Of_ContentsConnectionQueryVariables, query: string}, Table_Of_ContentsConnectionQueryVariables>(Table_Of_ContentsConnectionDocument, variables, options);
      },
    site_settings(variables: Site_SettingsQueryVariables, options?: C): Promise<{data: Site_SettingsQuery, variables: Site_SettingsQueryVariables, query: string}> {
        return requester<{data: Site_SettingsQuery, variables: Site_SettingsQueryVariables, query: string}, Site_SettingsQueryVariables>(Site_SettingsDocument, variables, options);
      },
    site_settingsConnection(variables?: Site_SettingsConnectionQueryVariables, options?: C): Promise<{data: Site_SettingsConnectionQuery, variables: Site_SettingsConnectionQueryVariables, query: string}> {
        return requester<{data: Site_SettingsConnectionQuery, variables: Site_SettingsConnectionQueryVariables, query: string}, Site_SettingsConnectionQueryVariables>(Site_SettingsConnectionDocument, variables, options);
      },
    doc_pages(variables: Doc_PagesQueryVariables, options?: C): Promise<{data: Doc_PagesQuery, variables: Doc_PagesQueryVariables, query: string}> {
        return requester<{data: Doc_PagesQuery, variables: Doc_PagesQueryVariables, query: string}, Doc_PagesQueryVariables>(Doc_PagesDocument, variables, options);
      },
    doc_pagesConnection(variables?: Doc_PagesConnectionQueryVariables, options?: C): Promise<{data: Doc_PagesConnectionQuery, variables: Doc_PagesConnectionQueryVariables, query: string}> {
        return requester<{data: Doc_PagesConnectionQuery, variables: Doc_PagesConnectionQueryVariables, query: string}, Doc_PagesConnectionQueryVariables>(Doc_PagesConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  